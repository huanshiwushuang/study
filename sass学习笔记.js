// ---PS----------------------------------------------------------------------------------
// 1、sass不能被滥用，可能生成的样式表会很大
// 2、规则嵌套：选择器嵌套、属性嵌套
// 3、作用于如你想的那样，以花括号为界限
// 4、
// 5、
// 6、
// 7、

// ---变量----------------------------------------------------------------------------------
// 1、变量以 $ 开头，区别于 less 的 @

// 2、老版本的sass使用!来标识变量

// 3、变量的值可以为任意你所知道的css 某个样式的值

// 4、变量的作用域同 js 类比

// 5、变量被引用，可以组合到任意 css 某个样式的值，变量可以相互引用

// 6、变量 短横线 和 下划线，定义和使用可以互换。

// 7、!default 修饰的变量权重低，之后没有被声明覆盖才会使用这个值
    // 例如：$name: 张三!default;

// ---嵌套规则----------------------------------------------------------------------------------
// 1、普通花括号的规则嵌套

// 2、& 符号会被父选择器替代，常用于 :hover 之类的
    // 记住这种特殊用法：
    // #content aside {
    //   color: red;
    //   body.ie & { color: green }
    // }

// 3、群组嵌套也会按照常规解开

// 4、> + ~ 子代、相邻、后面同层 选择器解开规则和普通的一样

// 5、属性嵌套之---属性后面的花括号里面写值。从短横线处断开。
    // nav {
    //     border: {
    //         style: solid;
    //         width: 1px;
    //         color: #ccc;
    //     }
    // }
// 6、属性嵌套之---属性后面的值后面的花括号里面写值。花括号里的同样会常规解开
    // nav {
    //     border: 1px solid #ccc {
    //         left: 0px;
    //         right: 0px;
    //     }
    // }
// ---SASS导入----------------------------------------------------------------------------------
// 1、导入 .sass 或者 .scss 可以省略后缀

// 2、以下划线开头的 sass 文件是 局部文件 不会生成 css 文件。下划线和后缀都可以省略
    // 文件_color.sass ---》 @import "color"

// 3、@import 导入可以直接嵌套替代位置

// 4、css 文件不会被 sass 导入，会被原生css语法导入，所以导入一个css文件可以将后缀改为 sass scss
// 5、
// 6、
// 7、
// 8、
// 9、
// 10、
// 11、
// 12、

// 1、
// 2、
// 3、
// 4、
// 5、
// 6、
// 7、
// 8、
// 9、
// 10、
// 11、
// 12、